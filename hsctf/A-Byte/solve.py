#!/usr/bin/env python3
from z3 import *

desired_output = [ 0x69, 0x72, 0x62, 0x75, 0x67, 0x7a, 0x76, 0x31, 0x76, 0x5e, 0x78, 0x31, 0x74, 0x5e, 0x6a, 0x6f, 0x31, 0x76, 0x5e, 0x65, 0x35, 0x5e, 0x76, 0x40, 0x32, 0x5e, 0x39, 0x69, 0x33, 0x63, 0x40, 0x31, 0x33, 0x38, 0x7c ]

# prepare list of inputs
inp = []
for i in range(0x23):
    byte = BitVec(str(i), 8)
    inp.append(byte)

z = Solver()

for i in range(0x23):
    z.add((inp[i] ^ 1) == desired_output[i])

# check if z3 is able to satisfy conditions
if z.check() == sat:
    solution = z.model()
    flag = ""
    for i in range(0x23):
        flag += chr(int(str(solution[inp[i]])))

    print(flag)
